#!/bin/bash

# Copyright 2018 Carnegie Mellon University (Author: Siddharth Dalmia)
# Email id : sdalmia@andrew.cmu.edu
# Apache 2.0

email=${USER}@andrew.cmu.edu
workdir=`readlink -f .`
gpu=1
nodes=
exclude=
job_name=
job_log=
job=
job_opts=
outdir=
job_lang=bash
timestamp=$(date +"%Y-%m-%d_%H.%M.%S")
help_message="Run slurm batch jobs using this script : run-sbatch [OPTIONS] --job job.[sh/py/...] 
  eg. run-sbatch --job job.sh
  eg. For shell scripts: run-sbatch --gpu 0 --job-name test_script --job job.sh --job-opts \"--job_arg1 arg1 --job_arg2 arg2 arg3\"
  eg. For python codes : run-sbatch --gpu 0 --job-name test_script --job-lang python3 --job job.py --job-opts \"--job_arg1 arg1 --job_arg2 arg2 arg3\"

  OPTIONS : 
              --exclude  <exclude_list> : List of nodes to exclude (eg. islpc18,islpc19 or islpc[30-33]).
              --nodes    <node_list>    : List of nodes to include (eg. islpc18,islpc19 or islpc[30-33]).
              --job-name <job_name>     : Name of the job (also sets the slurm output filename).
              --job-lang <job_lang>     : Language the job is written, typically how you call the job (eg. python or python3 or perl etc.), Default is bash.
              --job-log  <job_log_dir>  : Directory path for the job output file.
              --job-opts <job_opts>     : The options needed for the job to run (NOTE: Options should be inside quotes(\"\")).
              --gpu      <ngpus>        : Number of GPUs[0-n] needed for the job, Default is 1.
              "

set -e
. parse_options.sh

if [ -z "$job" ]; then
    echo "Error: Need Job script"
    echo "HELP:"
    printf "$help_message\n"
    exit 1
fi
output="${timestamp}_slurm_%j.out"
if [ ! -z "$exclude" ]; then
        exclude="--exclude ${exclude}"
fi 
if [ ! -z "$nodes" ]; then
        nodes="-w ${nodes}"
fi
if [ ! -z "$job_name" ]; then
        output="${timestamp}_${job_name}_%j.out"
        job_name="-J ${job_name}"
fi
if [ ! -z "$job_log" ]; then
        output=${job_log}/${output}
fi

cd $workdir

if [ $job_lang == "bash" ]; then
    echo sbatch --gres=gpu:$gpu $nodes $exclude --kill-on-invalid-dep=yes --no-requeue --get-user-env -D $workdir --mail-type=FAIL \
                                                        --mail-user=$email --output=$output --error=$output $job_name ./$job $job_opts

    sbatch --gres=gpu:$gpu $nodes $exclude --kill-on-invalid-dep=yes --no-requeue --get-user-env -D $workdir --mail-type=FAIL \
                                                        --mail-user=$email --output=$output --error=$output $job_name ./$job $job_opts
else

    if [ ! -f $job ]; then
        echo "Error: Need Job file"
        echo "HELP:"
        printf "$help_message\n"
        exit 1
    fi
    echo sbatch --gres=gpu:$gpu $nodes $exclude --kill-on-invalid-dep=yes --no-requeue --get-user-env -D $workdir --mail-type=FAIL \
                                                --mail-user=$email --output=$output --error=$output $job_name ${job_lang} $job $job_opts

    sbatch --gres=gpu:$gpu $nodes $exclude --kill-on-invalid-dep=yes --no-requeue --get-user-env -D $workdir --mail-type=FAIL \
                                                                --mail-user=$email --output=$output --error=$output $job_name <<EOF 
#!/bin/bash
${job_lang} $job $job_opts
EOF

fi
